import streamlit as st
import smtplib
import pandas as pd
import gspread
import json
import os
import datetime
import time
from oauth2client.service_account import ServiceAccountCredentials
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# ğŸ“Œ RÃ©cupÃ©rer les credentials depuis Streamlit Cloud Secrets
creds_json = os.getenv("GOOGLE_SHEETS_CREDS")

if not creds_json:
    raise ValueError("Erreur : GOOGLE_SHEETS_CREDS n'est pas dÃ©fini sur Streamlit Cloud !")

try:
    creds_dict = json.loads(creds_json)
except json.JSONDecodeError:
    raise ValueError("Erreur : Les credentials JSON sont mal formatÃ©s.")

# ğŸ“Œ Connexion Ã  Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# ğŸ“Œ Ouvrir le Google Sheet principal
SHEET_ID = "1hDLA-eGfVDeNj08RC-VrwXbHrRhO76XTNTWcdp4YY0A"  # Remplace par ton vrai ID
sheet = client.open_by_key(SHEET_ID).sheet1

# ğŸ“Œ VÃ©rifier et ajouter les en-tÃªtes si elles ne sont pas prÃ©sentes
def verifier_et_ajouter_entetes():
    entetes = [
        "Date", "Nom", "PrÃ©nom", "Email",
        "Nombre de clients mensuels", "Nombre de kits 1P", "Nombre de kits 2P",
        "Chiffre d'Affaires (â‚¬)", "CoÃ»t Total (â‚¬)", "BÃ©nÃ©fice Net (â‚¬)"
    ]
    premiere_ligne = sheet.row_values(1)

    if premiere_ligne != entetes:
        sheet.insert_row(entetes, 1)

verifier_et_ajouter_entetes()

# ğŸ“Œ Configuration de la page
st.set_page_config(page_title="Simulateur de RentabilitÃ© Opaline", layout="wide")

# ğŸ“Œ Affichage du logo Opaline
st.markdown(
    """
    <div style="text-align: center;">
        <img src="https://quozyli.com/wp-content/uploads/2025/03/logo_opaline.png" width="320">
    </div>
    """,
    unsafe_allow_html=True
)

# ğŸ“Œ Titre principal
st.markdown("<h1 style='text-align: center; font-size: 40px;'>ğŸ“Š Simulateur de RentabilitÃ© Opaline</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: grey;'>Estimez vos gains en quelques secondes</h3>", unsafe_allow_html=True)

# ğŸ“Œ Ligne de sÃ©paration
st.markdown("<hr style='border: 2px solid #55833D;'>", unsafe_allow_html=True)

# ğŸ“Œ Inputs utilisateur
st.markdown("<h2 style='margin-top: 30px;'>ğŸ“Œ Informations de votre activitÃ©</h2>", unsafe_allow_html=True)
clients = st.number_input("Nombre de clients mensuels", min_value=1, value=50, step=1)
kits_1p = st.number_input("Nombre de kits 1 personne vendus/mois (14â‚¬ HT)", min_value=0, value=100, step=1)
kits_2p = st.number_input("Nombre de kits 2 personnes vendus/mois (22â‚¬ HT)", min_value=0, value=50, step=1)

# ğŸ“Œ ParamÃ¨tres financiers
prix_1p = 14  
prix_2p = 22  
cout_par_kit = 12.15  

# ğŸ“Œ Calculs financiers
chiffre_affaires = (kits_1p * prix_1p) + (kits_2p * prix_2p)
cout_total = (kits_1p + kits_2p) * cout_par_kit
profit = chiffre_affaires - cout_total

# ğŸ“Œ Affichage des rÃ©sultats
st.markdown("<hr style='border: 2px solid #55833D;'>", unsafe_allow_html=True)
st.markdown(f"""
    <div style="text-align: center; font-size: 28px; font-weight: bold; padding: 20px; border: 2px solid #55833D; border-radius: 10px; background-color: #f2f2f2; color: black;">
        ğŸ’° <span style="color: #55833D;">Chiffre dâ€™affaires mensuel :</span> {chiffre_affaires:.2f} â‚¬<br><br>
        ğŸ“‰ <span style="color: #555;">CoÃ»t total :</span> {cout_total:.2f} â‚¬<br><br>
        ğŸš€ <span style="color: #55833D;">BÃ©nÃ©fice net estimÃ© :</span> {profit:.2f} â‚¬
    </div>
""", unsafe_allow_html=True)

st.markdown("<hr style='border: 2px solid #55833D;'>", unsafe_allow_html=True)

# ğŸ“Œ Fonction pour enregistrer les donnÃ©es dans Google Sheets (sans vÃ©rification des doublons)
def enregistrer_donnees(nom, prenom, email):
    date_aujourdhui = datetime.datetime.today().strftime('%Y-%m-%d')

    # Enregistrement direct sans vÃ©rification de l'existence de l'email
    sheet.append_row([
        date_aujourdhui, nom, prenom, email, clients, kits_1p, kits_2p, 
        chiffre_affaires, cout_total, profit
    ])
# ğŸ“Œ Fonction pour envoyer un email
def envoyer_email(nom, prenom, destinataire):
    smtp_server = "smtp.gmail.com"
    smtp_port = 587
    sender_email = "blanchisserie.opaline@gmail.com"
    sender_password = "ezylyxtieibbytgc"

    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = destinataire
    msg['Subject'] = "Opaline - OpportunitÃ© de Franchise"

    body = f"""
<html>
<body style="font-family: Arial, sans-serif; color: #333;">
    <div style="max-width: 600px; margin: auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;">
        <img src="https://quozyli.com/wp-content/uploads/2025/03/Group-28.png" width="150" alt="Opaline" style="display: block; margin: auto;">
        <h2 style="text-align: center; color: #55833D;">Opaline - Votre simulation de rentabilitÃ©</h2>
        
        <p>Bonjour <strong>{nom} {prenom}</strong>,</p>
        
        <p>Merci d'avoir utilisÃ© notre simulateur de rentabilitÃ© Opaline. Nous sommes ravis de voir votre intÃ©rÃªt pour cette opportunitÃ© unique.</p>
        
        <p>Voici un aperÃ§u de votre potentiel financier en rejoignant notre rÃ©seau :</p>
        <ul>
            <li><strong>Chiffre dâ€™affaires mensuel estimÃ© :</strong> {chiffre_affaires:.2f} â‚¬</li>
            <li><strong>CoÃ»t total estimÃ© :</strong> {cout_total:.2f} â‚¬</li>
            <li><strong>BÃ©nÃ©fice net estimÃ© :</strong> {profit:.2f} â‚¬</li>
        </ul>

        <p>Opaline, câ€™est bien plus quâ€™une simple franchise : câ€™est une **opportunitÃ© clÃ© en main** pour dÃ©velopper votre propre blanchisserie industrielle et gÃ©nÃ©rer des revenus rÃ©currents. En tant que franchisÃ©, vous bÃ©nÃ©ficiez :</p>
        <ul>
            <li>âœ… Dâ€™une solution tout-en-un avec machines et gestion informatisÃ©e</li>
            <li>âœ… Dâ€™un accompagnement complet pour rÃ©ussir votre lancement</li>
            <li>âœ… Dâ€™un marchÃ© en forte croissance grÃ¢ce aux besoins des conciergeries et hÃ´telleries</li>
        </ul>

        <p>Si cette opportunitÃ© vous intÃ©resse, nous serions ravis dâ€™Ã©changer avec vous pour approfondir votre projet et rÃ©pondre Ã  toutes vos questions.</p>

        <p><strong>ğŸ“… Nous pouvons convenir dâ€™un rendez-vous pour discuter ensemble.</strong></p>

        <p>Nous vous enverrons Ã©galement trÃ¨s prochainement un **business plan dÃ©taillÃ©**, afin que vous puissiez analyser plus en profondeur les chiffres et le potentiel de votre future blanchisserie.</p>

        <p>ğŸ“© <strong>Nâ€™hÃ©sitez pas Ã  nous contacter dÃ¨s maintenant pour planifier un Ã©change :</strong></p>
        <p style="text-align: center;">
            ğŸ“§ <a href="mailto:contact@blanchisserie-opaline.com" style="color: #55833D; font-weight: bold;">contact@blanchisserie-opaline.com</a>
        </p>

        <p>Ã€ trÃ¨s bientÃ´t,</p>
        <p><strong>Lâ€™Ã©quipe Opaline - La franchise de blanchisserie</strong></p>
    </div>
</body>
</html>
    """

    msg.attach(MIMEText(body, 'html'))

    try:
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, destinataire, msg.as_string())
        server.quit()
        return True
    except Exception as e:
        return False

# ğŸ“Œ Capture des informations utilisateur avec loader
nom = st.text_input("Nom")
prenom = st.text_input("PrÃ©nom")
email = st.text_input("Email")

if st.button("ğŸ“¨ Envoyer mon analyse"):
    if email and nom and prenom:
        with st.spinner("ğŸ“© Traitement en cours..."):
            enregistrer_donnees(nom, prenom, email)
            success = envoyer_email(nom, prenom, email)

        if success:
            st.success(f"ğŸ“© Un email a Ã©tÃ© envoyÃ© Ã  {email} avec votre simulation.")
    else:
        st.warning("Veuillez remplir tous les champs.")
